--CREACION DE STORED PROCEDURES
USE Com5600G04;
GO

--REGISTRAR SUCURSALES
CREATE OR ALTER PROCEDURE SUCURSAL.REGISTRAR_SUCURSAL(@CIUDAD VARCHAR(20), 
@DIRECCION VARCHAR(70), @HORARIO VARCHAR(30), @TELEFONO CHAR(15)) AS
BEGIN
	IF NOT EXISTS (SELECT 1 FROM SUCURSAL.SUCURSAL WHERE DIRECCION = @DIRECCION)
		INSERT INTO SUCURSAL.SUCURSAL(ciudad, direccion, horario, telefono) 
		VALUES (@CIUDAD, @DIRECCION, @HORARIO, @TELEFONO)
	ELSE
	BEGIN
		UPDATE SUCURSAL.SUCURSAL SET CIUDAD = @CIUDAD
		UPDATE SUCURSAL.SUCURSAL SET HORARIO = @HORARIO
		UPDATE SUCURSAL.SUCURSAL SET TELEFONO = @TELEFONO
	END
END
GO

--BAJA DE SUCURSALES
CREATE OR ALTER PROCEDURE SUCURSAL.BAJAR_SUCURSAL(@ID INT) AS 
BEGIN
	UPDATE SUCURSAL.sucursal SET BAJA = getdate() WHERE ID = @ID
END
GO

--ALTA SUCURSALES
CREATE OR ALTER PROCEDURE SUCURSAL.ALTA_SUCURSAL(@ID INT) AS 
BEGIN
	UPDATE SUCURSAL.SUCURSAL SET BAJA = NULL WHERE ID = @ID
END
GO

--REGISTRAR EMPLEADOS
CREATE OR ALTER PROCEDURE SUCURSAL.REGISTRAR_EMPLEADO(@NOMBRE VARCHAR(20), 
@APELLIDO VARCHAR(20),@DNI CHAR(9), @DIRECCION VARCHAR(100), @MAILPERSONAL VARCHAR(50), 
@MAILEMPRESARIAL VARCHAR(50), @CUIL CHAR(12), @CARGO VARCHAR(20), @SUCURSAL VARCHAR(20), 
@TURNO VARCHAR(20)) AS
BEGIN
	IF NOT EXISTS (SELECT 1 FROM SUCURSAL.EMPLEADO WHERE DNI = @DNI)
		INSERT INTO SUCURSAL.empleado(nombre, apellido, dni, direccion, 
		email_personal, email_empresarial, cuil, cargo,  sucursal, turno) 
		VALUES (@NOMBRE, @APELLIDO, @DNI, @DIRECCION, @MAILPERSONAL, @MAILEMPRESARIAL, 
		@CUIL, @CARGO, @SUCURSAL, @TURNO);
	ELSE
	BEGIN
		UPDATE SUCURSAL.EMPLEADO SET NOMBRE = @NOMBRE WHERE DNI = @DNI
		UPDATE SUCURSAL.EMPLEADO SET APELLIDO = @APELLIDO WHERE DNI = @DNI
		UPDATE SUCURSAL.EMPLEADO SET DIRECCION = @DIRECCION WHERE DNI = @DNI
		UPDATE SUCURSAL.EMPLEADO SET email_personal = @MAILPERSONAL WHERE DNI = @DNI
		UPDATE SUCURSAL.EMPLEADO SET email_empresarial = @MAILEMPRESARIAL	 WHERE DNI = @DNI
		UPDATE SUCURSAL.EMPLEADO SET CUIL = @CUIL WHERE DNI = @DNI
		UPDATE SUCURSAL.EMPLEADO SET CARGO = @CARGO WHERE DNI = @DNI
		UPDATE SUCURSAL.EMPLEADO SET SUCURSAL = @SUCURSAL WHERE DNI = @DNI
		UPDATE SUCURSAL.EMPLEADO SET TURNO = @TURNO WHERE DNI = @DNI
	END
END
GO

--BAJA DE EMPLEADOS
CREATE OR ALTER PROCEDURE SUCURSAL.BAJAR_EMPLEADO(@LEGAJO INT) AS 
BEGIN
	UPDATE SUCURSAL.EMPLEADO SET BAJA = getdate() WHERE legajoId = @LEGAJO
END
GO

--ALTA EMPLEADOS
CREATE OR ALTER PROCEDURE SUCURSAL.ALTA_EMPLEADO(@LEGAJO INT) AS 
BEGIN
	UPDATE SUCURSAL.EMPLEADO SET BAJA = NULL WHERE LEGAJOID = @LEGAJO
END
GO

--REGISTRAR PRODUCTOS
CREATE OR ALTER PROCEDURE CATALOGO.REGISTRAR_PRODUCTO(@CATEGORIA VARCHAR(30), 
@NOMBRE VARCHAR(30), @PRECIO NUMERIC(10,2), @PRECIO_REFERENCIA NUMERIC(10,2), 
@UNIDAD_REFERENCIA VARCHAR(5), @FECHA DATE, @PRECIOUSD NUMERIC(10,2), @PROVEEDOR VARCHAR(50)) AS
BEGIN
	IF NOT EXISTS (SELECT ID FROM CATALOGO.PRODUCTO WHERE NOMBRE = @NOMBRE)
		INSERT INTO CATALOGO.PRODUCTO(CATEGORIA, NOMBRE, PRECIO, PRECIO_REFERENCIA, 
		UNIDAD_REFERENCIA, FECHA, PRECIOUSD, PROVEEDOR) 
		VALUES (@CATEGORIA, @NOMBRE, @PRECIO, @PRECIO_REFERENCIA, @UNIDAD_REFERENCIA, @FECHA, @PRECIOUSD, @PROVEEDOR)
	ELSE
		BEGIN
		UPDATE CATALOGO.PRODUCTO SET CATEGORIA = @CATEGORIA WHERE NOMBRE = @NOMBRE
		UPDATE CATALOGO.PRODUCTO SET PRECIO = @PRECIO WHERE NOMBRE = @NOMBRE
		UPDATE CATALOGO.PRODUCTO SET PRECIO_REFERENCIA = @PRECIO_REFERENCIA WHERE NOMBRE = @NOMBRE
		UPDATE CATALOGO.PRODUCTO SET unidad_referencia = @UNIDAD_REFERENCIA WHERE NOMBRE = @NOMBRE
		UPDATE CATALOGO.PRODUCTO SET FECHA = @FECHA WHERE NOMBRE = @NOMBRE
		UPDATE CATALOGO.PRODUCTO SET PRECIOUSD = @PRECIOUSD WHERE NOMBRE = @NOMBRE
		UPDATE CATALOGO.PRODUCTO SET PROVEEDOR = @PROVEEDOR WHERE NOMBRE = @NOMBRE
		END
END
GO

-- BAJA DE PRODUCTOS
CREATE OR ALTER PROCEDURE CATALOGO.ELIMINAR_PRODUCTO(@ID INT) AS
BEGIN
	DELETE FROM CATALOGO.PRODUCTO WHERE ID = @ID
END
GO

--MODIFICAR CATEGORICA PRODUCTO
CREATE OR ALTER PROCEDURE CATALOGO.ACTUALIZAR_CATEGORIA_PRODUCTO(@ID INT, @CAT VARCHAR(30))
AS 
BEGIN
	UPDATE CATALOGO.PRODUCTO SET CATEGORIA = @CAT WHERE ID = @ID
END
GO

--MODIFICAR NOMBRE PRODUCTO
CREATE OR ALTER PROCEDURE CATALOGO.ACTUALIZAR_NOMBRE_PRODUCTO(@ID INT, @NOMBRE VARCHAR(30))
AS 
BEGIN
	UPDATE CATALOGO.PRODUCTO SET NOMBRE = @NOMBRE WHERE ID = @ID
END
GO

--MODIFICAR PRECIO REFERENCIA PRODUCTO
CREATE OR ALTER PROCEDURE CATALOGO.ACTUALIZAR_PRECIO_REFERENCIA_PRODUCTO(@ID INT, 
@PRECIOREF NUMERIC(10,2)) AS 
BEGIN
	UPDATE CATALOGO.PRODUCTO SET PRECIO_REFERENCIA = @PRECIOREF WHERE ID = @ID
END
GO

--MODIFICAR PRECIO PRODUCTO
CREATE OR ALTER PROCEDURE CATALOGO.ACTUALIZAR_PRECIO_PRODUCTO(@ID INT, @PRECIO NUMERIC(10, 2))
AS 
BEGIN
	UPDATE CATALOGO.PRODUCTO SET PRECIO = @PRECIO WHERE ID = @ID
END
GO

--MODIFICAR UNIDAD DE REFERENCIA PRODUCTO
CREATE OR ALTER PROCEDURE CATALOGO.ACTUALIZAR_UNIDAD_REFERENCIA_PRODUCTO(@ID INT, @UNIDAD VARCHAR(5))
AS 
BEGIN
	UPDATE CATALOGO.PRODUCTO SET UNIDAD_REFERENCIA = @UNIDAD WHERE ID = @ID
END
GO

--MODIFICAR FECHA PRODUCTO
CREATE OR ALTER PROCEDURE CATALOGO.ACTUALIZAR_FECHA_PRODUCTO(@ID INT, @FECHA DATE) 
AS
BEGIN
	UPDATE CATALOGO.PRODUCTO SET FECHA = @FECHA WHERE ID = @ID
END
GO

--MODIFICAR DIRECCION SUCURSAL
CREATE OR ALTER PROCEDURE SUCURSAL.ACTUALIZAR_DIRECCION_SUCURSAL(@ID INT, @DIRECCION VARCHAR(70))
AS 
BEGIN
	UPDATE SUCURSAL.SUCURSAL SET DIRECCION = @DIRECCION WHERE ID = @ID
END
GO

--MODIFICAR HORARIO SUCURSAL
CREATE OR ALTER PROCEDURE SUCURSAL.ACTUALIZAR_HORARIO_SUCURSAL(@ID INT, @HORARIO VARCHAR(30))
AS 
BEGIN
	UPDATE SUCURSAL.SUCURSAL SET HORARIO = @HORARIO WHERE ID = @ID
END
GO

--MODIFICAR DIRECCION SUCURSAL
CREATE OR ALTER PROCEDURE SUCURSAL.ACTUALIZAR_TELEFONO_SUCURSAL(@ID INT, @TELEFONO VARCHAR(70))
AS 
BEGIN
	UPDATE SUCURSAL.SUCURSAL SET DIRECCION = @TELEFONO WHERE ID = @ID
END
GO

--validar VENTA
CREATE OR ALTER PROCEDURE VENTASSUCURSAL.INVALIDAR_VENTA(@ID INT)
AS 
BEGIN
	UPDATE VENTASSUCURSAL.VENTA_REGISTRADA SET BAJA = NULL WHERE ID_FACTURA = @ID
END
GO

--INVALIDAR VENTA
CREATE OR ALTER PROCEDURE VENTASSUCURSAL.VALIDAR_VENTA(@ID INT)
AS 
BEGIN
	UPDATE VENTASSUCURSAL.VENTA_REGISTRADA SET BAJA = GETDATE() WHERE ID_FACTURA = @ID
END
GO
--INSERTAR VENTA
CREATE OR ALTER PROCEDURE VENTASSUCURSAL.REGISTRAR_VENTA (@CIUDAD VARCHAR(20), @TIPO_CLIENTE VARCHAR(10), @GENERO VARCHAR(10), @PROD VARCHAR(100), @PRECIO NUMERIC(10,2), @CANTIDAD INT, 
														  @FECHA DATE, @HORA TIME, @MEDIO_PAGO VARCHAR(20), @EMPLEADO_ID INT, @IDENTIFICADOR_PAGO VARCHAR(50), @ID_FACT INT) AS
IF NOT EXISTS (SELECT 1 FROM ventasSucursal.venta_registrada WHERE id_factura = @ID_FACT)
	INSERT INTO ventasSucursal.venta_registrada(CIUDAD, tipo_de_cliente, GENERO, producto, precio_unitario, CANTIDAD, FECHA, HORA, medio_pago, empleado_id, identificador_de_pago, id_factura)
	VALUES (@CIUDAD, @TIPO_CLIENTE, @GENERO, @PROD, @PRECIO, @CANTIDAD, @FECHA, @HORA, @MEDIO_PAGO, @EMPLEADO_ID, @IDENTIFICADOR_PAGO, @ID_FACT)
ELSE
	BEGIN
		UPDATE ventasSucursal.venta_registrada SET CIUDAD = @CIUDAD WHERE id_factura = @ID_FACT
		UPDATE ventasSucursal.venta_registrada SET tipo_de_cliente = @TIPO_CLIENTE WHERE id_factura = @ID_FACT
		UPDATE ventasSucursal.venta_registrada SET GENERO = @GENERO WHERE id_factura = @ID_FACT
		UPDATE ventasSucursal.venta_registrada SET producto = @PROD WHERE id_factura = @ID_FACT
		UPDATE ventasSucursal.venta_registrada SET precio_unitario = @PRECIO WHERE id_factura = @ID_FACT
		UPDATE ventasSucursal.venta_registrada SET CANTIDAD = @CANTIDAD WHERE id_factura = @ID_FACT
		UPDATE ventasSucursal.venta_registrada SET FECHA = @FECHA WHERE id_factura = @ID_FACT
		UPDATE ventasSucursal.venta_registrada SET HORA = @HORA WHERE id_factura = @ID_FACT
		UPDATE ventasSucursal.venta_registrada SET medio_pago = @MEDIO_PAGO WHERE id_factura = @ID_FACT
		UPDATE ventasSucursal.venta_registrada SET empleado_id = @EMPLEADO_ID WHERE id_factura = @ID_FACT
		UPDATE ventasSucursal.venta_registrada SET identificador_de_pago = @IDENTIFICADOR_PAGO WHERE id_factura = @ID_FACT
	END

go

--INSERTAR FACTURA
CREATE OR ALTER PROCEDURE VENTASSUCURSAL.CREAR_FACTURA(@fecha date, @estado varchar(20), @cliente int, @id_factura varchar(12), @tipo char(1))
AS
BEGIN
 IF NOT EXISTS (SELECT 1 FROM ventasSucursal.factura WHERE id_factura = @id_factura)
	INSERT INTO ventasSucursal.factura(cliente_id, fecha, estado, TIPO, id_factura)
	VALUES(@cliente, @fecha, @estado, @TIPO, @id_factura);
ELSE
	BEGIN
		UPDATE ventasSucursal.factura SET FECHA = @FECHA WHERE id_factura = @id_factura
		UPDATE ventasSucursal.factura SET ESTADO = @ESTADO WHERE id_factura = @id_factura
		UPDATE ventasSucursal.factura SET cliente_id = @CLIENTE WHERE id_factura = @id_factura
		UPDATE ventasSucursal.factura SET TIPO = @TIPO WHERE id_factura = @id_factura
	END
END
GO

--BAJA DE FACTURA
CREATE OR ALTER PROCEDURE VENTASSUCURSAL.BAJA_FACTURA(@ID INT)
AS UPDATE ventasSucursal.factura SET baja = GETDATE() WHERE ID = @ID
GO

--ALTA DE FACTURA
CREATE OR ALTER PROCEDURE VENTASSUCURSAL.BAJA_FACTURA(@ID INT)
AS UPDATE ventasSucursal.factura SET BAJA = NULL WHERE ID = @ID;

--REGISTRAR DETALLE DE FACTURA
GO
CREATE OR ALTER PROCEDURE VENTASSUCURSAL.CREAR_DETALLE (@CANTIDAD INT, @PRECIO NUMERIC(10, 2), @SUBTOTAL NUMERIC(11, 2), @ID_PROD INT, @ID_FACT INT)
AS 
	IF NOT EXISTS (SELECT 1 FROM ventasSucursal.DETALLE WHERE ID_PROD = @ID_PROD AND ID_FACT = @ID_FACT)
	INSERT INTO ventasSucursal.DETALLE(CANTIDADPROD, PRECIO, SUBTOTAL, ID_PROD, ID_FACT) VALUES (@CANTIDAD, @PRECIO, @SUBTOTAL, @ID_PROD, @ID_FACT)
	ELSE
	BEGIN 
	UPDATE ventasSucursal.DETALLE SET CANTIDADPROD  =@CANTIDAD WHERE ID_PROD = @ID_PROD AND ID_FACT = @ID_FACT
	UPDATE ventasSucursal.DETALLE SET PRECIO  =@PRECIO WHERE ID_PROD = @ID_PROD AND ID_FACT = @ID_FACT
	UPDATE ventasSucursal.DETALLE SET SUBTOTAL  =@SUBTOTAL WHERE ID_PROD = @ID_PROD AND ID_FACT = @ID_FACT
	END

--ELIMINAR DETALLE 
GO
CREATE OR ALTER PROCEDURE VENTASSUCURSAL.ELIMINAR_DETALLE(@ID int)
AS DELETE FROM ventasSucursal.DETALLE WHERE ID = @ID

--CREAR MEDIO DE PAGO
go
CREATE OR ALTER PROCEDURE VENTASSUCURSAL.CREAR_MEDIO(@MEDIO VARCHAR(20))
AS IF NOT EXISTS(SELECT 1 FROM ventasSucursal.MEDIO_PAGO WHERE MEDIO_PAGO = @MEDIO)
	INSERT INTO ventasSucursal.MEDIO_PAGO (MEDIO_PAGO) VALUES (@MEDIO)
	ELSE
		UPDATE ventasSucursal.MEDIO_PAGO SET MEDIO_PAGO = @MEDIO WHERE MEDIO_PAGO = @MEDIO
go
--ELIMINAR MEDIO PAGO
CREATE OR ALTER PROCEDURE VENTASSUCURSAL.ELIMINAR_MEDIO(@ID int )
AS DELETE FROM ventasSucursal.MEDIO_PAGO WHERE ID = @ID

/*
		id int identity(1, 1) primary key,
		medio_pago varchar(30)
*/