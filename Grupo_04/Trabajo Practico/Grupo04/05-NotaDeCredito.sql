USE Com5600G04;
GO

if not exists (select * from sys.schemas where name='credito')
begin
	exec('create schema credito');
end
go

IF NOT EXISTS (SELECT * 
               FROM INFORMATION_SCHEMA.TABLES 
               WHERE TABLE_SCHEMA = 'credito' 
                 AND TABLE_NAME = 'nota_de_credito')
BEGIN
	create table credito.nota_de_credito(
		id int identity(1, 1) not null primary key,
		factura_id int foreign key references ventassucursal.factura(id),
		monto numeric(11, 2)
	)
END

IF NOT EXISTS (SELECT * 
               FROM INFORMATION_SCHEMA.TABLES 
               WHERE TABLE_SCHEMA = 'credito' 
                 AND TABLE_NAME = 'detalle_nota_credito')
BEGIN
	create table credito.detalle_nota_credito(
		id int identity(1, 1) not null primary key,
		id_nota int foreign key references credito.nota_de_credito(id),
		precio numeric(10, 2) check(precio > 0),
		cantidad int check(cantidad > 0),
		producto varchar(50),
		subtotal numeric(11, 2)
	)
END

--PROCEDIMIENTOS DE EMISIÓN DE NOTAS DE CRÉDITO
GO
CREATE OR ALTER PROCEDURE credito.CREAR_NOTA @ID_FACT CHAR(11) AS
BEGIN
	IF NOT EXISTS(SELECT 1 FROM credito.NOTA_DE_CREDITO WHERE FACTURA_ID = (SELECT ID FROM VENTASSUCURSAL.FACTURA WHERE ID_FACTURA = @ID_FACT))
	BEGIN
		IF (SELECT BAJA FROM VENTASSUCURSAL.FACTURA WHERE ID_FACTURA = @ID_FACT) IS NULL
		BEGIN
			IF(SELECT ESTADO FROM VENTASSUCURSAL.FACTURA WHERE ID_FACTURA = @ID_FACT) = 'Pendiente'
				RAISERROR('LA FACTURA NO FUE PAGADA, NO PUEDE GENERARSE UNA NOTA DE CRÉDITO', 1, 1)
			ELSE
			INSERT INTO credito.NOTA_DE_CREDITO(FACTURA_ID) VALUES ((SELECT ID FROM VENTASSUCURSAL.FACTURA WHERE ID_FACTURA = @ID_FACT))
		END
		ELSE
			RAISERROR('LA FACTURA FUE DADA DE BAJA O NO EXISTE', 1, 1)
	END
	ELSE
		RAISERROR('YA EXISTE UNA NOTA DE CRÉDITO PARA ESTA FACTURA', 1, 1)
END

GO
CREATE OR ALTER PROCEDURE credito.CREAR_DETALLE_NOTA(@ID_NOTA INT, @PRODUCTO VARCHAR(100), @CANTIDAD INT, @ID_FACT INT) AS
BEGIN
	IF EXISTS(SELECT 1 FROM credito.DETALLE_NOTA_CREDITO WHERE ID_NOTA = @ID_NOTA AND PRODUCTO = @PRODUCTO)
		RAISERROR('YA SE GENERÓ UN DETALLE PARA ESTE PRODUCTO Y ESTA NOTA DE CRÉDITO', 1, 1)
	ELSE
	BEGIN
		DECLARE @ID_PROD INT = (SELECT ID FROM CATALOGO.PRODUCTO WHERE NOMBRE = @PRODUCTO AND ID IN (SELECT ID_PROD FROM VENTASSUCURSAL.DETALLE WHERE ID_FACT = @ID_FACT))
		IF(@ID_PROD IS NULL)
			RAISERROR('EL PRODUCTO NO ESTÁ VINCULADO AL DETALLE DE LA FACTURA', 1, 1)
		ELSE
		BEGIN
			IF(SELECT SUM(CANTIDADPROD) FROM VENTASSUCURSAL.DETALLE WHERE ID_FACT = @ID_FACT AND id_prod = @ID_PROD) < (ISNULL((SELECT SUM(CANTIDAD) FROM credito.DETALLE_NOTA_CREDITO WHERE ID_NOTA = @ID_NOTA), 0) + @CANTIDAD)
				RAISERROR('NO PUEDE EMITIRSE UNA NOTA DE CRÉDITO POR UN MONTO MAYOR AL DE LA FACTURA', 1, 1)
			ELSE
			BEGIN
				DECLARE @PRECIO NUMERIC(10, 2) = (SELECT PRECIO FROM VENTASSUCURSAL.DETALLE WHERE ID_PROD = @ID_PROD AND ID_FACT = @ID_FACT)
				INSERT INTO credito.detalle_nota_credito(ID_NOTA, PRECIO, CANTIDAD, SUBTOTAL, PRODUCTO) VALUES (@ID_NOTA, @PRECIO, @CANTIDAD, @CANTIDAD * @PRECIO, @PRODUCTO)
			END
		END
	END
END

GO
CREATE OR ALTER PROCEDURE credito.EMITIR_NOTA (@ID INT) AS
BEGIN 
	IF NOT EXISTS (SELECT 1 FROM credito.NOTA_DE_CREDITO WHERE ID = @ID)
		RAISERROR('LA NOTA DE CRÉDITO NO EXISTE', 1, 1)
	ELSE
	BEGIN
		IF NOT EXISTS (SELECT 1 FROM credito.DETALLE_NOTA_CREDITO WHERE ID_NOTA = @ID)
			RAISERROR('NO FUE CREADO NINGÚN DETALLE PARA ESTA NOTA DE CRÉDITO', 1, 1)
		ELSE
			UPDATE credito.NOTA_DE_CREDITO SET MONTO = (SELECT SUM(SUBTOTAL) FROM credito.DETALLE_NOTA_CREDITO WHERE ID_NOTA = @ID)
	END
END